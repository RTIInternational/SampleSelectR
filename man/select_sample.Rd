% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_sample.R
\name{select_sample}
\alias{select_sample}
\title{Sample selection function}
\usage{
select_sample(
  frame,
  method,
  n,
  outall = FALSE,
  strata = NULL,
  mos = NULL,
  sort_vars = NULL,
  sort_method = NULL
)
}
\arguments{
\item{frame}{A data frame, data.table, or tibble from which to draw the sample. No default.}

\item{method}{The desired sampling method. Valid options are "srs", "sys_eq", "sys_pps", and "chromy_pps". No default.}

\item{n}{The sample size to draw from the frame. If strata is NULL, must be a positive integer. If strata is not NULL, must be a
data.frame, tibble, or data.table with columns for each stratification variable as the same type and variable names as the frame
plus a column with the sample size (\code{sample_size}) which is a positive integer. No default.}

\item{outall}{A logical value indicating whether to return the entire frame with a selection indicator or just the sample. Default is FALSE.}

\item{strata}{A vector of characters with variable names of strata. Default is NULL.}

\item{mos}{A character string defining the variable name on the frame for the measure of size. If not NULL, must have method = c("sys_pps", "chromy_pps").
If NULL, must have method=c("srs", "sys"). Default is NULL.}

\item{sort_vars}{A vector of characters indicating the variables that should be used to sort the frame. If not NULL, cannot have method = "srs".
Default is NULL.}

\item{sort_method}{A character string defining the method to implicitly sort the frame. Valid options are "serpentine" and "nest". Must coincide
with sort_var; i.e., both must be NULL or both must be not NULL. Default is NULL.}
}
\value{
A tidytable object containing the entire frame with a selection indicator or just the sample, dependent on the value of outall.
Selection probability and sampling weight are also included. May include various summary messages to the console when applicable for
certain sampling methods.
}
\description{
Selects a random sample using a specified method and sample size. Selection can also optionally be stratified and/or include a measure of
size (mos) if a PPS method is used.
}
\examples{

# SRS of 100 US counties, using geographic region as strata
# n is a data frame containing the strata values and corresponding desired sample size
# Sample size column must be titled 'sample_size'

n_df_srs <- data.frame(Region = as.factor(c("Northeast", "Midwest", "South", "West")),
                   sample_size = c(25, 25, 25, 25))

county_2023 |>
    select_sample(method = "srs", n = n_df_srs, strata = "Region")


# Systematic sample of 250 US universities. Each unit has an equal probability of being selected
# Includes a nested sort of enrollment total within sector
# Returns all obs from original data frame with a selection indicator column

sample_sys_eq <- ipeds |>
                 select_sample(method = "sys_eq", n = 250, outall = TRUE,
                 sort_vars = c("SECTOR", "ENRTOT"), sort_method = "nest")

# For samples taken with outall = TRUE, the sample size can be verified by summing
# the SelectionIndicator column.

sample_sys_eq
sum(sample_sys_eq$SelectionIndicator)


# Systematic PPS sample of 250 US universities. Each unit's probability of selection
# is proportional to its size measure.
# Using enrollment total as MOS
# Includes a nested sort of enrollment total within sector

sample_sys_pps <- ipeds |>
                  select_sample(method = "sys_pps", n = 250, mos = "ENRTOT",
                  sort_vars = c("SECTOR", "ENRTOT"), sort_method = "nest")

# For pps samples, it is possible for a single sampling unit to be selected multiple times
# due to a large mos value. This is especially true as desired sample size increases. The
# result is the final sample may not meet the desired sample size. To verify the pps sample,
# the NumberHits column can be summed and should total to the desired sample size.

sample_sys_pps
sum(sample_sys_pps$NumberHits)


# Sequential aka Chromy's method PPS sample of 500 PUMAs, using geographic region as strata
# Includes a serpentine sort of geographic division then state
# Using population total as MOS, each unit's probability of selection is proportional to its
# size measure.
# Note that there may be a discrepancy between the desired and final sample sizes. The final
# sample size can be verified by totaling NumberHits.

n_df_chr <- data.frame(Region = as.factor(c("Northeast", "Midwest", "South", "West")),
                   sample_size = c(125, 125, 125, 125))

puma_2023 |>
    select_sample(method = "chromy_pps", n = n_df_chr, strata = "Region", mos = "Pop_Tot",
                  sort_vars = c("Division", "State"), sort_method = "serpentine")

}
